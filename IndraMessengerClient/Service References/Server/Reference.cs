//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndraMessengerClient.Server {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MessengerSharedLibrary.Common")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataDiNascitaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataDiNascita {
            get {
                return this.DataDiNascitaField;
            }
            set {
                if ((this.DataDiNascitaField.Equals(value) != true)) {
                    this.DataDiNascitaField = value;
                    this.RaisePropertyChanged("DataDiNascita");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/MessengerSharedLibrary.Common")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IndraMessengerClient.Server.User FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IndraMessengerClient.Server.User ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IndraMessengerClient.Server.User From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IndraMessengerClient.Server.User To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IMessengerService")]
    public interface IMessengerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Login", ReplyAction="http://tempuri.org/IMessengerService/LoginResponse")]
        IndraMessengerClient.Server.User Login(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Login", ReplyAction="http://tempuri.org/IMessengerService/LoginResponse")]
        System.Threading.Tasks.Task<IndraMessengerClient.Server.User> LoginAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetMessageForMe", ReplyAction="http://tempuri.org/IMessengerService/GetMessageForMeResponse")]
        IndraMessengerClient.Server.Message[] GetMessageForMe(IndraMessengerClient.Server.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetMessageForMe", ReplyAction="http://tempuri.org/IMessengerService/GetMessageForMeResponse")]
        System.Threading.Tasks.Task<IndraMessengerClient.Server.Message[]> GetMessageForMeAsync(IndraMessengerClient.Server.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/SendMessage", ReplyAction="http://tempuri.org/IMessengerService/SendMessageResponse")]
        void SendMessage(IndraMessengerClient.Server.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/SendMessage", ReplyAction="http://tempuri.org/IMessengerService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(IndraMessengerClient.Server.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetUtentiLoggati", ReplyAction="http://tempuri.org/IMessengerService/GetUtentiLoggatiResponse")]
        IndraMessengerClient.Server.User[] GetUtentiLoggati();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetUtentiLoggati", ReplyAction="http://tempuri.org/IMessengerService/GetUtentiLoggatiResponse")]
        System.Threading.Tasks.Task<IndraMessengerClient.Server.User[]> GetUtentiLoggatiAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessengerServiceChannel : IndraMessengerClient.Server.IMessengerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessengerServiceClient : System.ServiceModel.ClientBase<IndraMessengerClient.Server.IMessengerService>, IndraMessengerClient.Server.IMessengerService {
        
        public MessengerServiceClient() {
        }
        
        public MessengerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessengerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IndraMessengerClient.Server.User Login(string username) {
            return base.Channel.Login(username);
        }
        
        public System.Threading.Tasks.Task<IndraMessengerClient.Server.User> LoginAsync(string username) {
            return base.Channel.LoginAsync(username);
        }
        
        public IndraMessengerClient.Server.Message[] GetMessageForMe(IndraMessengerClient.Server.User user) {
            return base.Channel.GetMessageForMe(user);
        }
        
        public System.Threading.Tasks.Task<IndraMessengerClient.Server.Message[]> GetMessageForMeAsync(IndraMessengerClient.Server.User user) {
            return base.Channel.GetMessageForMeAsync(user);
        }
        
        public void SendMessage(IndraMessengerClient.Server.Message message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(IndraMessengerClient.Server.Message message) {
            return base.Channel.SendMessageAsync(message);
        }
        
        public IndraMessengerClient.Server.User[] GetUtentiLoggati() {
            return base.Channel.GetUtentiLoggati();
        }
        
        public System.Threading.Tasks.Task<IndraMessengerClient.Server.User[]> GetUtentiLoggatiAsync() {
            return base.Channel.GetUtentiLoggatiAsync();
        }
    }
}
